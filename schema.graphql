# ========== Resolvers ============

type Query {
    hello(name: String): String!
    users: [User!]!
    skills: [String!]!
    posts(author: ID): [Post!]!
    post(id: ID!): Post
}

type Mutation {
    createUser(data: CreateUserInput!): User!
    updateUser(where: FindInput!, data: UpdateUserInput!): User!
    deleteUser(where: FindInput!): User!
    createPost(data: CreatePostInput!): Post!
    updatePost(where: FindInput!, data: UpdatePostInput!): Post!
    deletePost(where: FindInput!): Post!
}

type Subscription {
    post: PostSubscription!
}

# =========== Types ===========

type User {
    id: ID!
    name: String!
    username: String!
    email: String
    phone: String
    website: String
    posts: [Post]
}

type Post {
    id: ID!
    author: User!
    title: String!
    body: String!
    comments: [Comment]!
}

type Comment {
    id: ID!
    post: Post!
    name: String!
    email: String!
    body: String!
}

type PostSubscription {
    type: MutationType!
    data: Post!
}

# ========== Inputs ==========

input FindInput {
    id: ID!
}

input UpdateUserInput {
    name: String
    username: String
    email: String
    phone: String
    website: String
}

input CreateUserInput {
    name: String!
    username: String!
    email: String!
}

input CreatePostInput {
    author: String!
    title: String!
    body: String!
}

input UpdatePostInput {
    title: String
    body: String
}

# ========= Enums =========
enum MutationType {
    CREATED
    UPDATED
    DELETED
}
